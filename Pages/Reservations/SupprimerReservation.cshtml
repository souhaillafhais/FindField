using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.RazorPages;
using Microsoft.EntityFrameworkCore;
using GestionTerrains.Data;
using GestionTerrains.Models.Domain;

namespace GestionTerrains.Pages.Reservations
{
    public class SupprimerReservationModel : PageModel
    {
        private readonly ReservationDbContext _context;

        public SupprimerReservationModel(ReservationDbContext context)
        {
            _context = context;
        }

        [BindProperty]
        public Reservation Reservation { get; set; } = default!;

        public async Task<IActionResult>
    OnGetAsync(int? id)
    {
    // Vérification du rôle
    var userRole = HttpContext.Session.GetString("UserRole");
    if (userRole == "Surveillant")
    {
    return RedirectToPage("/AccessDenied");
    }

    if (id == null)
    {
    return NotFound();
    }

    Reservation = await _context.Reservations
    .Include(r => r.Terrain)
    .FirstOrDefaultAsync(m => m.Id == id);

    if (Reservation == null)
    {
    return NotFound();
    }

    return Page();
    }

    public async Task<IActionResult>
        OnPostAsync(int? id)
        {
        // Vérification du rôle
        var userRole = HttpContext.Session.GetString("UserRole");
        if (userRole == "Surveillant")
        {
        return RedirectToPage("/AccessDenied");
        }

        if (id == null)
        {
        return NotFound();
        }

        Reservation = await _context.Reservations.FindAsync(id);

        if (Reservation != null)
        {
        _context.Reservations.Remove(Reservation);
        await _context.SaveChangesAsync();
        }

        return RedirectToPage("./ListeReservation");
        }
        }
        }
